# Jedi Knight Cog Script
#
# inv_persuasionfx.cog
#
# Handles the twinkle effects for force persuasion.
# Toggled via triggers.
#
# [darthslaw]
#
# (c) 2007 JK ReCog

symbols

message		startup
message		trigger
message		pulse
message		timer

thing		player			local
int			rank			local
flex		vel				local

vector		pos								local
template	twinkle_tpl=+forcetwinkle		local
thing		twinkle_thing					local

int			rank0=0			local
int			rank1=0			local
int			rank2=0			local
int			rank3=0			local
int			rank4=0			local
int			rank5=0			local
int			rank6=0			local
int			rank7=0			local
int			rank8=0			local
int			rank9=0			local
int			rank10=0		local
int			rank11=0		local
int			rank12=0		local
int			rank13=0		local
int			rank14=0		local
int			rank15=0		local
int			rank16=0		local
int			rank17=0		local
int			rank18=0		local
int			rank19=0		local
int			rank20=0		local
int			rank21=0		local
int			rank22=0		local
int			rank23=0		local
int			rank24=0		local
int			rank25=0		local
int			rank26=0		local
int			rank27=0		local
int			rank28=0		local
int			rank29=0		local
int			rank30=0		local
int			rank31=0		local

int			players=0		local
int			active=0		local

int			i				local
int			j				local

end

# ========================================================================================

code

startup:
	SetPulse(0);
	active = 0;
	for(i = 0; i < 32; i = i + 1) rank0[i] = 0;
	return;

trigger:
	if(GetSourceRef() == 1200)				// add a player to the list
	{
	#jkStringClear();
	#jkStringConcatAsciiString("Player ");
	#jkStringConcatInt(GetParam(0));
	#jkStringConcatAsciiString(" has activated persuasion fx (rank ");
	#jkStringConcatInt(GetParam(1));
	#jkStringConcatAsciiString(").");
	#jkStringOutput(-3, -1);
		if(active <= 0)
		{
			SetPulse(0.25);					// if this is the first player in the list, set the pulse on
			#print("pulse on");
		}
		active = active + 1;				// one more user
		rank0[GetParam(0)] = GetParam(1);	// rank0[player index] = rank of player (nonzero = on)
	}
	else if(GetSourceRef() == 1201)			// remove a player from the list
	{
	#jkStringClear();
	#jkStringConcatAsciiString("Player ");
	#jkStringConcatInt(GetParam(0));
	#jkStringConcatAsciiString(" has deactivated persuasion fx.");
	#jkStringOutput(-3, -1);
		if(rank0[GetParam(0)] == 0)			// already deactivated
		{
			#print("Already deactivated... returning");
			return;
		}
		active = active - 1;				// one less user
		if(active <= 0)						// no more users
		{
			active = 0;						// never let 'active' become negative
			SetPulse(0);					// switch off pulse
			#print("pulse off");
		}
		rank0[GetParam(0)] = 0;				// rank0[player index] = 0 (zero = off)
	}
	return;
# ........................................................................................
pulse:
	players = GetNumPlayers();
	for(i = 0 ; i <= players ; i = i + 1)
	{
		player = GetPlayerThing(i);
		rank = rank0[i];
		vel = VectorLen(GetThingVel(player)) * 1.5 / (1 + rank / 4);
		vel = vel + 0.2 * (4 - rank);		// add some extra stars for lower ranks (4=perfect cloak when not moving)
		for(j = 0.1; j < vel; j = j + 0.1)
		{
			#printint(j*10);
			SetTimerEx(0.25 * j / vel, 10, player, 0);
		}
	}
	return;
# ........................................................................................	
timer:
	pos = VectorSet(0.1 * (rand() - 0.5), 0.1 * (rand() - 0.5), 0.12 * (rand() - 0.5));
	twinkle_thing = FireProjectile(GetParam(0), twinkle_tpl, -1, -1, pos, '0 0 0', 0, 0, 0, 0);
	//SetLifeLeft(twinkle_thing, rand() * 0.25 + 0.25);
	return;

end

