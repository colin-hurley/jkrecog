# Jedi Knight Cog Script
#
# FORCE_PULL.COG
#
# FORCEPOWER Script - Force Pull
#  Basic Power
#  Bin 24
#
# Push:
#  Fires a powerful force wave that will knock enemies back.
# Pull:
#  Pull powerups or enemies' weapons to you with the force.
#
# Tap the button to push away any and all players in front of you who are
#  within some arc in front of you (arc widens with rank). Also, range
#  increases with rank, and the applied force decreases with range
#  (so, enemies who are closer will be pushed harder than enemies who
#  are farther away).
# Hold the button to target some pullable object, or a player or actor to
#  pull their weapon from. Same functionality as normal JK.
#
# [darthslaw]
#
# (C) 2006 JK ReCog


symbols

int         player                           local
int         victim                           local
int         potential                        local
int         throwThing                       local

flex        cost=40.0                        local
int         rank                             local
flex        mana                             local
flex        dot                              local
flex        maxDot                           local

int         type                             local
int         retval=0                         local

vector      dir                              local

sound       pullSound=ForcePull01.WAV        local
sound       pushSound=ForceThrow01.WAV       local

int         IsAFlag=0                        local

int			mode							local
flex		len								local

template	crosshair_tpl0=+crosshair_green_line_h	local
template	crosshair_tpl1=+crosshair_green_line_v	local
template	crosshair_tpl2=+crosshair_green_line_d1	local
template	crosshair_tpl3=+crosshair_green_line_d2	local
template	p_tpl							local

int			i								local

message     startup
message     activated
message     deactivated
message     pulse
message     timer
message     newplayer
message     killed
message     deselected
message     selected

end

# ========================================================================================


code

startup:
	player = GetLocalPlayerThing();

	Return;

# ........................................................................................

activated:
	// Cannot use power if blinded
	if(GetActorFlags(player) & 0x800) Return;

	//don't activate power if it is already activated 
	if(IsInvActivated(player, 24)) Return;

	mana = GetInv(player, 14);
	rank = GetInv(player, 24);

	cost = 40;
	
	// if we have enough mana to use the power
	if(mana >= cost)
	{
		victim = -1;
		SetInvActivated(player, 24, 1);
		mode = 0;			//push mode by default... set to pull mode when first pulse fires
		SetPulse(0.33);
	}
	Return;

# ........................................................................................

pulse:
	// Check all things for our victim.
	victim = -1;
	maxDot = 0;
	mode = 1;

	// Search for all players, actors and items.
	potential = FirstThingInView(player, 20 + 15 * rank, 5.5, 0x424);
	while(potential != -1)
	{
		if(
			HasLOS(player, potential) &&
			(potential != player) &&
			(VectorDist(GetThingPos(player), GetThingPos(potential)) <= (0.5 + rank / 2)) &&
			!(GetThingFlags(potential) & 0x200) &&
			!(GetActorFlags(potential) & 0x100) &&
			!((jkGetFlags(potential) & 0x20) &&
			!IsInvActivated(player, 23))
		)
		{
			// Hack to avoid targetting a CTF flag...
			IsAFlag = 0;
			if(GetThingType(potential == 5))
			{
				if(GetItemFlags(potential) & 8)
				{
					IsAFlag = 1;
				}
			}

			if(!IsAFlag)
			{
				dot = ThingViewDot(player, potential);
				if(dot > maxDot)
				{
					victim = potential;
					maxDot = dot;
				}
			}

		}
		potential = NextThingInView();
	}

	// If we have a victim...
	if(victim != -1)
	{
		jkSetTargetColors(18, 19, 20);
		jkSetTarget(victim);
	}
	else
	{
		jkEndTarget();
	}

	Return;

# ........................................................................................

deactivated:

	if(GetThingHealth(player) <= 0)
	{
		call stop_power;
		Return;
	}
	
	mana = GetInv(player, 14);
	
	if(mode == 0)		//push!
	{
		cost = 10 * rank;	//minimum cost
		if(mana >= cost) 	//if there's enough mana
		{
			cost = cost * 5;	// full cost... if mana is less, do a percentage of
			//potential = FirstThingInView(player, 20 + 10 * rank, 2.0, 0x404);
			victim = 0;		//if this number is not 0 when we exit this while loop, we haven't pushed anyone
			potential = FirstThingInView(player, 20 + 10 * rank, 2.0, 0x40C);
			while(potential != -1)
			{
				if(
					HasLOS(player, potential) &&
					(potential != player) &&
					(VectorDist(GetThingPos(player), GetThingPos(potential)) <= (0.5 + rank / 4)) &&
					!(GetThingFlags(potential) & 0x200) &&
					!(GetActorFlags(potential) & 0x100) &&
					!((jkGetFlags(potential) & 0x20) &&
					!IsInvActivated(player, 23))
				)
				{
					// Hack to avoid targetting a CTF flag...
					IsAFlag = 0;
					if(GetThingType(potential == 5))
					{
						if(GetItemFlags(potential) & 8)
						{
							IsAFlag = 1;
						}
					}
					
					p_tpl = GetThingTemplate(potential);
					for(i = 0; i < 4; i = i + 1)
						if(p_tpl == crosshair_tpl0[i])
							IsAFlag = 1;				//not really a flag, but this will prevent the crosshairs from being pushed

					if(!IsAFlag)
					{
						dir = VectorSub(GetThingPos(potential), GetThingPos(player));
						len = VectorLen(dir);
						dir = VectorAdd(dir, VectorScale('0 0 0.075', len));
						# str = mx + b = ((-600 * rank) / (2 + rank)) * len + (300 * rank); 
						# b = 300 * rank;
						# m = -2b/(2 + rank) = -b / len_max
						# len_max = (0.75 + rank / 4)
						#dir = VectorScale(VectorNorm(dir), ((-600 * rank) / (2 + rank)) * len + (300 * rank));
						dir = VectorScale(VectorNorm(dir), (300 * rank) - ((300 * rank) / (0.75 + rank / 4)) * len);
						if(mana < cost)
							dir = VectorScale(dir, mana / cost);	//not enough mana -- fraction of the force
						DetachThing(potential);
						ApplyForce(potential, dir);
						jkstringclear();
						jkstringconcatasciistring("Distance: ");
						jkstringconcatflex(len);
						jkstringconcatasciistring(" JKU ; Force: ");
						jkstringconcatflex(VectorLen(dir));
						jkstringconcatasciistring(" JKN");
						jkstringoutput(-3, -1);
						
						victim = -1; 
					}
				}
				potential = NextThingInView();
			}
			if(victim != 0)	//if we pushed at least one person, victim will not equal 0, and so we should do the effects
			{
				PlayMode(player, 24);
				PlaySoundThing(pushSound, player, 1.0, -1, -1, 0x80);
				if((GetInv(player, 64) != 1) && (GetInv(player, 65) != 1)) ChangeInv(player, 14, -cost);
				SetBinWait(player, 24, 0.4);
			}
		}
		victim = -1;		//we just did the push power, instead of pull, so don't go into force pull code next
	}
	
	if(victim == -1)
	{
		call stop_power;
		Return;
	}

	SetPulse(0);
	jkEndTarget();

	cost = 40;
	
	if(mana >= cost)
	{
		if(HasLOS(player, victim))				 // check that we still have a LOS on it...
		{
			PlayMode(player, 24);
			PlaySoundThing(pullSound, player, 1.0, -1, -1, 0x80);
			if((GetInv(player, 64) != 1) && (GetInv(player, 65) != 1)) ChangeInv(player, 14, -cost);
			SetBinWait(player, 24, 0.2);

			throwThing = -1;
			type = GetThingType(victim);
			if(type == 2)							  // ACTOR
			{
				if(GetActorWeapon(victim, 1) != -1)
				{
					// Make victim drop powerup.
					throwThing = SkillTarget(victim, player, 24, 0);
					if(throwThing != -1)
					{
						SetActorWeapon(victim, 1, -1);
						AmputateJoint(victim, 3);
					}
				}
				else
				{
					SetInvActivated(player, 24, 0);
					Return;
				}

			}
			else
			if(type == 10)							 // OTHER PLAYER
			{
				if(!(GetThingFlags(victim) & 0x200))
					retval = SkillTarget(victim, player, 24, rank);
				SetInvActivated(player, 24, 0);
				Return;
			}
			else
			if(type == 5)							  // ITEM
			{
				retval = SkillTarget(victim, player, 24, rank);
				if(retval != 0)
				{
					if(!GetLifeLeft(victim)) SetLifeleft(victim, 30.0);
					throwThing = victim;
				}
				else
				{
					SetInvActivated(player, 24, 0);
					Return;
				}
			}

			// Throw item at player.
			if(throwThing != -1)
			{
				SetTimerEx(1.5, 1, throwThing, 0);

				// Duplicate sends for lost packets
				SetTimerEx(3.5, 2, throwThing, 0);
				SetTimerEx(3.6, 2, throwThing, 0);

				if(IsMulti())
				{
					// Kill the thing
					SetTimerEx(4.0, 3, throwThing, 0);
					// Duplicate send for lost packets
					SetTimerEx(4.1, 4, throwThing, 0);
				}

				// Turn off gravity for the thing
				ClearPhysicsFlags(throwThing, 0x1);

				dir = VectorScale(VectorNorm(VectorSub(GetThingPos(player), GetThingPos(throwThing))), 30);

				ApplyForce(throwThing, dir);
			}
		}
	}

	SetInvActivated(player, 24, 0);

	Return;

# ........................................................................................

timer:

	if(GetSenderId() == 1)
	{
		// We MUST set gravity whatever the original setting,
		// else objects might just float around...
		SetPhysicsFlags(GetParam(0), 1);
		Return;
	}
	else
	if(GetSenderId() == 2)
	{
		// Set back to no gravity after the object had a chance to
		// settle down for next time they respawn...
		ClearPhysicsFlags(GetParam(0), 1);
		Return;
	}
	else
	if(GetSenderId() == 3)
	{
		// SITH_TF_DISABLED
		SetThingFlags(GetParam(0), 0x80000);
		SetLifeLeft(GetParam(0), 26);
		Return;
	}
	else
	if(GetSenderId() == 4)
	{
		SetThingFlags(GetParam(0), 0x80000);
		SetLifeLeft(GetParam(0), 25.9);
		Return;
	}

	Return;

# ........................................................................................

selected:
	jkPrintUNIString(player, 24);
	Return;

# ........................................................................................

deselected:
	call stop_power;
	Return;

# ........................................................................................

killed:
	if(GetSenderRef() != player) Return;

newplayer:
	call stop_power;

	Return;

# ........................................................................................

stop_power:
	SetPulse(0);
	SetInvActivated(player, 24, 0);
	victim = -1;
	jkEndTarget();

	Return;

end


