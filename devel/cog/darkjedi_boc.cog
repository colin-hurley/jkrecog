# Jedi Knight Cog Script
#
# DARKJEDI_BOC.COG
#
# DARK JEDI Script - Boc
#
# Has the powers of destruction, repel, and saber throw
# The power of the destruction increases with game difficulty
# The "homing" ability of the thrown saber increases with difficulty
# Will react to various force attacks
#
# [darthslaw]
#
# (C) 2007 JK ReCog

symbols

message        startup
message        damaged
message        killed
message        user0
message        user1
message			pulse
message			timer
message			trigger

thing          darkjedi                      mask=0xfff

material       tip_mat=saberblue0.mat      local
material       side_mat=saberblue1.mat     local

template       tpl_wall=+ssparks_wall        local
template       tpl_blood=+ssparks_blood      local
template       tpl_saber=+ssparks_saber      local

int            victim                        local
int            forcepower                    local
#int            forcepulse                    local
int				oldflags					local

int				damagetype					local
flex			damage						local

template	destProj0=+f_dest_p4			local
template	destProj1=+f_dest_p5			local
template	destProj2=+f_dest_p6			local

sound          destSound=ForceDestruct01.wav local

template		saberthrow_tpl=+boc_saberthrow	local

flex           autoAimFOV=10                 local
flex           autoAimMaxDist=5              local

template       repel=+force_repel            local

#sound          s1z=I00bo01z.wav              local
sound          s2z=I00bo02z.wav              local
#sound          s3z=I00bo03z.wav              local
sound          s4z=I00bo04z.wav              local
#sound          s5z=I00bo05z.wav              local
#sound          s6z=I00bo06z.wav              local
sound          s7z=I00bo07z.wav              local
#sound          s71=I00bo071.wav              local
sound          s72=I00bo072.wav              local
sound          s73=I00bo073.wav              local

sound			saber_ignite=LtSaberOn01.WAV	local
sound			saber_off=LtSaberOff01.WAV		local
sound			humSound01=LtSaberLp01.WAV		local
int				humChannel=-1					local
int            snd=-1                        local
int            okay                          local

int				Channel1=-1						local	# sound channels for the thrown sabers
thing			saber1=-1						local	# the thrown saber things
int				dir1							local	# the direction of each of the saber things

sound			saber_spin=ltsabertwirl2.wav	local		# played while saber is spinning

model			saberthrow_nofan=boc_saberthrow_nofan.3do	local	# model to give the saber while returning

int			cog_bin=165						local

int		aimode		local
sound	pushSound=ForceThrow01.WAV	local
vector	dir			local
thing	source		local
int		difficulty	local
flex	delay		local

end

# ========================================================================================

code

startup:
	aimode = 0;
	sleep(0.1);
   jkSetSaberInfo(darkjedi, side_mat, tip_mat, 0.003, 0.001, 0.110, tpl_wall, tpl_blood, tpl_saber);
   jkSetFlags(darkjedi, 0x15);
	PlaySoundThing(saber_ignite, darkjedi, 1.0, -1, -1, 0x80);
	humChannel = PlaySoundThing(humSound01, darkjedi, 1.0, -1, -1, 0x81);
	SetTimerEx(1.0, 25, 0, 0);	// set a looping timer to set the DJ's class cog
	difficulty = GetDifficulty();
   Return;
# ........................................................................................

killed:
   jkSetFlags(darkjedi, 0x8);			// shrink sabers
   SetActorFlags(darkjedi, 0x40000);	// immobilize
   if(humChannel != -1) StopSound( humChannel, 0.5 );
	PlaySoundThing(saber_off, darkjedi, 1.0, -1, -1, 0x80);
	if(saber1 != -1) SetThingUserData(saber1, darkjedi);		// tell saber to return to DJ
	KillTimerEx(20);

	Sleep(1.6);

   snd = PlaySoundThing(s2z, darkjedi, 0.66, -1, -1, 0x180);
   Sleep(GetSoundLen(s2z) + 0.4);

   snd = PlaySoundThing(s72, darkjedi, 1.0, -1, -1, 0x180);
   Sleep(GetSoundLen(s72) + 0.6);

   snd = PlaySoundThing(s73, darkjedi, 1.0, -1, -1, 0x180);
   Sleep(GetSoundLen(s73) + 0.9);

   snd = PlaySoundThing(s7z, darkjedi, 1.0, -1, -1, 0x180);
   Sleep(0.7);

   snd = PlaySoundThing(s2z, darkjedi, 0.5, -1, -1, 0x180);
   Sleep(0.4);

   snd = PlaySoundThing(s4z, darkjedi, 0.5, -1, -1, 0x180);

   Return;

# ........................................................................................

damaged:
   damage = GetParam(0);
   damageType = GetParam(1);
	source = GetSourceRef();

   if (damageType & 1)                       // IMPACT
      damage = damage / 2;
   else
   if (damageType & 2)                       // ENERGY
      damage = damage / 2;
   else
   if (damageType & 4)                       // FIRE
      damage = damage / 10;
   else
   if (damageType & 8)                       // FORCE
	{
		damage = damage;
		if((IsInvActivated(source, 31)) && !(aimode & 0x1))		// player is using grip and DJ hasnt reacted yet
		{
			#print("ATTACK: Grip ; RETALIATE WITH: Push");
			aimode = BitSet(aimode, 0x1);		// only one reaction allowed
			SetTimerEx(6, 2, 1, 0);	// timer to clear grip aimode
			if(difficulty == 2)
			{
				if(rand() < 0.96)
					delay = 0.3 + rand()*0.6;
				else
					delay = 0.9;
			}
			else if(difficulty == 1)
			{
				if(rand() < 0.92)
					delay = 0.3 + rand()*0.9;
				else
					delay = 1.2;
			}
			else
			{
				if(rand() < 0.88)
					delay = 0.3 + rand()*1.2;
				else
					delay = 1.5;
			}
			SetTimerEx(delay, 12, darkjedi, source);		// timer to push the player
			AISetLookPos(darkjedi, GetThingPos(source));	// look at the player
		}
		if((IsInvActivated(source, 34)) && !(aimode & 0x2))		// player is using dsight, and DJ hasn't reacted yet
		{
			#print("ATTACK: Deadly Sight ; RETALIATE WITH: Jump");
			aimode = BitSet(aimode, 0x2);		// only one reaction allowed
			SetTimerEx(6, 3, 2, 0);	// timer to clear deadly sight aimode
			if(difficulty == 2)
			{
				if(rand() < 0.94)
					delay = 0.2 + rand()*0.4;
				else
					delay = 0.7; 
			}
			else if(difficulty == 1)
			{
				if(rand() < 0.88)
					delay = 0.25 + rand()*0.55;
				else
					delay = 0.9;
			}
			else
			{
				if(rand() < 0.82)
					delay = 0.3 + rand()*0.7;
				else
					delay = 1.1;
			}
			SetTimerEx(delay, 13, darkjedi, source);		// timer to jump
			AISetLookPos(darkjedi, GetThingPos(source));	// look at the player
		}
	}
   else
   if (damageType & 16)                      // SABER
      damage = damage;

   ReturnEx(damage);

   Return;

# ........................................................................................

user1:
   // Receives message from 20b_camera.cog or 20_rahnlines.cog
   okay = 1;
   return;


user0:
   // Don't start using force powers until message is received
   if(okay == 0) return;

   victim = GetParam(0);
   forcepower = GetParam(1);

   if (forcepower == 1)
   {
      // Print("Force Power 2 : FORCE DESTRUCTION");
      PlayMode(darkjedi, 24);
      Sleep(0.3);
      // He could die during the sleep
      if(GetThingHealth(darkjedi) <= 0) Return;

      AddDynamicTint(victim, 0.3, 0.0, 0.15);
		if(GetDifficulty() == 2)
			FireProjectile(darkjedi, destProj2, destSound, -1, '0 0 0', '0 0 0', 1.0, 0, autoAimFOV, autoAimMaxDist);
		else if(GetDifficulty() == 1)
			FireProjectile(darkjedi, destProj1, destSound, -1, '0 0 0', '0 0 0', 1.0, 0, autoAimFOV, autoAimMaxDist);
		else
			FireProjectile(darkjedi, destProj0, destSound, -1, '0 0 0', '0 0 0', 1.0, 0, autoAimFOV, autoAimMaxDist);
   }
   else
   if (forcepower == 2)
   {
      // Print("Force Power 2 : FORCE REPEL...");
      PlayMode(darkjedi, 35);
      Sleep(0.3);
      // He could die during the sleep
      if(GetThingHealth(darkjedi) <= 0) Return;

      CreateThing(repel, darkjedi);
   }
   else
   if (forcepower == 3)
   {
		#Print("Force Power 3 : FORCE SABER THROW");
		okay = 0;
		oldflags = GetActorFlags(darkjedi);
		SetActorFlags(darkjedi, 0x40000);
		PlayMode(darkjedi, 36);		// make him throw the lightsaber
		sleep(0.5);
		// He could die during the sleep
		if(GetThingHealth(darkjedi) <= 0) Return;
		saber1 = FireProjectile(darkjedi, saberthrow_tpl, -1, -1, '0.075 0.04 0', '0 0 0', 0, 0, 0, 0);
		jkClearFlags(darkjedi, 0x10);	// give DJ only 1 saber now
		SetThingUserData(saber1, victim);		// tell saber to seek out Kyle
		dir1=0;	// 0 = after kyle; 1 = returning to DJ
		Channel1 = PlaySoundThing(saber_spin, saber1, 1.0, -1, -1, 0x81);
		SetPulse(0.1);
		if(GetDifficulty() == 2)		// hard ; 5 seconds of throw time
		{
			SetTimerEx(5.0, 20, 0, 0);
			sleep(1.0);	// delay before allowing him to move again
		}
		else if(GetDifficulty() == 1)	// medium ; 4 seconds of throw time
		{
			SetTimerEx(4.0, 20, 0, 0);
			sleep(1.5);	// delay before allowing him to move again
		}
		else							// easy ; 3 seconds of throw time
		{
			SetTimerEx(3.0, 20, 0, 0);
			sleep(2.0);	// delay before allowing him to move again
		}		
		ClearActorFlags(darkjedi, 0x40000);
		SetActorFlags(darkjedi, oldflags);	// make sure no lost flags for some reason
   }
   Return;

timer:
	if(GetSenderID() == 2)	// clear grip aimode
	{
		aimode = BitClear(aimode, 0x1);
		return;
	}
	if(GetSenderID() == 3)	// clear dsight aimode
	{
		aimode = BitClear(aimode, 0x2);
		return;
	}
	if(GetSenderID() == 12)	// push
	{
		source = GetParam(1);
		#print("Push player");
		// if DJ isn't even looking at the player right now, or player isn't gripping anymore don't push
		if( (ThingViewDot(darkjedi, source) < 0.2) || !(isInvActivated(source, 31)) )
		{
			aimode = BitClear(aimode, 0x1);
			KillTimerEx(2);
			return;
		}
		dir = vectorNorm(VectorSub(GetThingPos(source), GetThingPos(darkjedi)));
		dir = vectorSet(vectorX(dir), vectorY(dir), 0.15);
		dir = VectorScale(vectorNorm(dir), 600);
		DetachThing(source);
		ApplyForce(source, dir);
		ApplyForce(darkjedi, VectorScale(GetThingLVec(darkjedi), -60));
		PlayMode(darkjedi, 35);
		PlaySoundThing(pushSound, darkjedi, 1.0, -1, -1, 0x80);
		return;
	}
	if(GetSenderID() == 13)	// jump
	{
		source = GetParam(1);
		#print("DJ Jump");
		// if DJ is too far from the player, or player isn't using DSight anymore, don't jump
		if((VectorDist(getthingPos(source), getThingPos(darkjedi)) > 4) || !(isInvActivated(source, 34)))
		{
			aimode = BitClear(aimode, 0x2);
			KillTimerEx(3);
			return;
		}
		dir = VectorScale(VectorSub(GetThingPos(source), GetThingPos(darkjedi)), 1.1);
		dir = VectorSet(vectorX(dir), vectorY(dir), 3);
		DetachThing(darkjedi);
		SetThingVel(darkjedi, dir);		// jump behind the player
		return;
	}
	if(GetSenderID() == 20)				// thrown saber to return to DJ
	{
		if(saber1 != -1) SetThingUserData(saber1, darkjedi);		// tell saber to return to DJ
		return;
	}
	if(GetSenderID() == 25)						// set class cog
	{
		SetThingClassCog(darkjedi, GetInvCog(getLocalPlayerThing(), cog_bin));
		SetTimerEx(5, 25, 0, 0);	// set a looping timer to set the DJ's class cog
	}
	return;

pulse:
	if(dir1 == 0 && GetThingUserData(saber1) == darkjedi)	// saber on the return
	{
		dir1 = 1;
		StopSound(Channel1, 0.1);
		Channel1 = PlaySoundThing(humSound01, saber1, 1.0, -1, -1, 0x81);
		SetThingModel(saber1, saberthrow_nofan);	// no twirl fan; travelling straight path
		SetPulse(0);
	}
	return;

# ........................................................................................

trigger:
	if(GetSourceRef() == 1037)	// thrown saber retrieved
	{
		if(channel1 != -1) StopSound(channel1, 0.1);
		jkSetFlags(darkjedi, 0x10);		// give back the second saber
		saber1 = -1;
		okay = 1;
	}
	return;

end

