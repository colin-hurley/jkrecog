# Jedi Knight Cog Script
#
# WEAP_REPEATER.COG
#
# WEAPON 6 Script - Repeater
# This is the same rifle that was in Dark Forces with the heat sink shield and the
# three barrel design. It is a rapid fire rifle. With the option button you can fire
# all three barrels at once at a slower rate.
#
# - Affected by MagSealed sectors/surfaces.
#
# The weapon now experiences recoil, and the secondary fire now fires in a triangular
#  cluster pattern.  The projectiles for secondary fire are now more accurate, but
#  less precise. The third fire mode fires an explosive energy ball in an arc path.
#
# [10/18/2006]
#   Added code that makes shots increase in error with each shot.
# [10/19/2006]
#  Crosshair pulse added.
#
# [darthslaw]
#
# (C) 2006, JK ReCog


symbols

model       povModel=rptv.3do                   local
model       weaponMesh=rptg.3do                 local

keyframe    mountAnim=RptVmnt.key               local
keyframe    dismountAnim=RptVdis.key            local
keyframe    povfireAnim=RptVpst1.key            local
keyframe    povfireAnim1=RptVpst2.key           local
keyframe    povfireAnim2=RptVpst3.key           local
keyframe    holsterAnim=kyhlstr.key             local

sound       mountSound=df_bry_ready.wav         local
sound       dismountSound=PutWeaponAway01.wav   local
sound       fireSound=rpeatrlp.wav              local
sound       fireSound1=repeat-1.wav             local
sound		fireSound3=rpt_fire3.wav			local
sound       outSound=trprout.wav                local

vector      fireOffset                          local
#vector      adjOffset                           local
vector      shakePos                            local
vector      shakeAngle                          local
vector		vec									local

template    projectile=+repeaterball            local
template	projectile3=+expl_rpt_ball			local

thing       player                              local

flex        fireWait=0.1                        local
flex		fireWait3=0.8						local
flex		ammoCost3=5.0						local
flex        powerBoost                          local
#flex        lastFireTime=0                      local
#flex        curFireTime=0                       local
flex        autoAimFOV=25                       local
flex        autoAimMaxDist=5                    local
#flex        numExpectedFires                    local
#flex        extraSimTime                        local
flex        holsterWait                         local
flex		r									local
flex		err									local

int         trackID=-1                          local
int         mode                                local
int         fireChannel=-1                      local
#int         dummy                               local
int         ammoCost                            local
int         holsterTrack                        local
int			anim=0								local

int			xhair_bin=119							local

int			fire3								local

int			waggle=0				local
vector		waggle_vec				local
flex		waggle_spd				local

message     startup
message     activated
message     deactivated
message     selected
message     deselected
message     newplayer
message     killed
message     autoselect
message     fire
message		pulse	# for fire3
message     timer
message		user2	# start fire3
message		user3	# stop fire3
message		user4	# waggle control

end

# ========================================================================================

code

startup:
   player = GetLocalPlayerThing();
   fireOffset = '0.0186 0.0102 0.00';
	fire3=0;
	jkSetWaggle(player, '0 0 0', 0);
	waggle = 0;
   Return;

# ........................................................................................

fire:
   mode = GetSenderRef();

   // Check that the player is still alive.
   if(GetThingHealth(player) <= 0)
   {
      if(fireChannel != -1)
      {
         StopSound( fireChannel, 0.1 );
         fireChannel = -1;
         PlaySoundThing(fireSound1, player, 1.0, -1, -1, 0x180);
      }
      Return;
   }

   if(GetInv(player, 12) < ammoCost)
   {
      if (fireChannel != -1)
      {
         StopSound( fireChannel, 0.1 );
         fireChannel = -1;
         PlaySoundThing(fireSound1, player, 1.0, -1, -1, 0x180);
      }

      if(GetAutoSwitch() & 1)
         SelectWeapon(player, AutoSelectWeapon(player, 1));

      Return;
   }

	if(fire3 == 1)	// fire mode 3
	{
		return;
	}

	jkPlayPOVKey(player, povfireAnim[anim], 1, 0x38);
	
	r = rand();
	// decide NEXT anim (since first shot is always accurate, first anim should be the straight one)
	if(r > 0.67) anim = 2;
	else if(r > 0.33) anim = 1;
	else anim = 0;
	
	// Get random aiming error
	err = GetInv(player, xhair_bin);
	
	if (mode == 0)
	{
		SendMessageEx(GetInvCog(player, xhair_bin), user0, 0.7, 0, 0, 0);
		if(fireChannel == -1)
			fireChannel = PlaySoundThing(fireSound, player, 1.0, -1, -1, 0x181);
		vec = VectorScale(VectorSet(3 * (rand() - 0.5), 3 * (rand() - 0.5), 0), err);
		shakePos = VectorScale(RandVec(), .001);
		shakeAngle = VectorScale(VectorSet(VectorX(vec), VectorY(vec), 0), 1);
		FireProjectile(player, projectile, -1, 8, fireOffset, vec, 1.0, 0x30, autoAimFOV, autoAimFOV*2 );
		ChangeInv( player, xhair_bin, 0.1 );	//increase error with each shot
	}
	else
	if (mode == 1)
	{
		SendMessageEx(GetInvCog(player, xhair_bin), user0, 0.5, 0, 0, 0);
		shakePos = VectorScale(RandVec(), .002);
		shakeAngle = VectorScale(RandVec(), 2);
		vec = VectorSet(0.5 + 1.5 * rand(), 0, 0);							//from '2.0 0 0'
		FireProjectile(player, projectile, fireSound1, 8, fireOffset, vec, 1.0, 0, autoAimFOV, autoAimMaxDist );
		vec = VectorSet(-0.25 - 1.25 * rand(), 0.25 + 1.25 * rand(), 0);	//from '-1.5 1.5 0'
		FireProjectile(player, projectile, -1, 8, fireOffset, vec, 1.0, 0, autoAimFOV, autoAimMaxDist );
		vec = VectorSet(-0.25 - 1.25 * rand(), -0.25 - 1.25 * rand(), 0);	//from '-1.5 -1.5 0'
		FireProjectile(player, projectile, -1, 8, fireOffset, vec, 1.0, 0, autoAimFOV, autoAimMaxDist );
		ChangeInv( player, xhair_bin, 0.4 );	//increase error with each shot
	}

	SetPOVShake(shakePos, shakeAngle, .05, 80.0);
   ChangeInv(player, 12, -ammoCost);

   powerBoost = GetInv(player, 63);
   ChangeFireRate(player, fireWait/powerBoost);

   if(GetInv(player, 12) == 0)
   {
      if (fireChannel != -1)
      {
         StopSound( fireChannel, 0.1 );
         fireChannel = -1;
         PlaySoundThing(fireSound1, player, 1.0, -1, -1, 0x180);
      }

      if(GetAutoSwitch() & 1)
         SelectWeapon(player, AutoSelectWeapon(player, 1));
   }

   Return;

pulse:
	// Check that the player is still alive.
	if(GetThingHealth(player) <= 0)
	{
		SetPulse(0);
		fire3=0;
		Return;
	}

	if(GetInv(player, 12) < ammoCost3)
	{
		if(GetAutoSwitch() & 1)
			SelectWeapon(player, AutoSelectWeapon(player, 1));
		PlaySoundThing(outSound, player, 1.0, -1, -1, 0x180);
		Return;
	}

	r = rand();
	if(r > 0.67) anim = 2;
	else if(r > 0.33) anim = 1;
	else anim = 0;
	jkPlayPOVKey(player, povfireAnim[anim], 1, 0x38);
	
	// Get random aiming error
	err = GetInv(player, xhair_bin);
	
	vec = VectorScale(VectorSet(3 * (rand() - 0.5), 3 * (rand() - 0.5), 0), err + 0.05);
	ChangeInv( player, xhair_bin, 0.8 );
	FireProjectile(player, projectile3, fireSound3, 8, fireOffset, vec, 1.0, 0, autoAimFOV, autoAimMaxDist );

	SetPOVShake('0 -0.005 0.005', '5 5 0', .05, 80.0);
	ChangeInv(player, 12, -ammoCost3);
	
	powerBoost = GetInv(player, 63);
	SetPulse(fireWait3/powerBoost);
	
	if(GetInv(player, 12) == 0)
		if(GetAutoSwitch() & 1)
			SelectWeapon(player, AutoSelectWeapon(player, 1));

	return;

# ........................................................................................

activated:
   mode   = GetSenderRef();
	jkSetWaggle(player, '0 0 0', 0);
	waggle = 0;

   if(mode > 1) Return;

   if (mode == 0) ammoCost = 1.0;
   else if (mode == 1) ammoCost = 3.0;
   if(GetInv(player, 12) < ammoCost)
   {
      PlaySoundThing(outSound, player, 1.0, -1, -1, 0x180);
      Return;
   }

   if (mode == 0)
   {
      if(fireChannel == -1 && fire3 == 0)
         fireChannel = PlaySoundThing(fireSound, player, 1.0, -1, -1, 0x181);
      fireWait = 0.1;
      ammoCost = 1.0;
      SendMessageEx(GetInvCog(player, xhair_bin), user0, 0.7, 0, 0, 0);
   }
   else
   if (mode == 1)
   {
      fireWait = 0.3;
      ammoCost = 3.0;
      SendMessageEx(GetInvCog(player, xhair_bin), user0, 0.5, 0, 0, 0);
   }
   anim = 0;		//start with a steady shot, then randomize after that..
   powerBoost = GetInv(player, 63);
   ActivateWeapon(player, fireWait/powerBoost, mode);

   Return;

# ........................................................................................

deactivated:
   mode = GetSenderRef();

	jkSetWaggle(player, waggle_vec, waggle_spd);
	waggle = 1;
   if(fireChannel != -1)
   {
      StopSound( fireChannel, 0.1);
      fireChannel = -1;
      PlaySoundThing(fireSound1, player, 1.0, -1, -1, 0x180);
   }
   DeactivateWeapon( player, mode );
   
   SendMessageEx(GetInvCog(player, xhair_bin), user0, 0.0, 0, 0, 0);

   Return;

# ........................................................................................

selected:
   PlayMode(player, 41);
   PlaySoundThing(mountSound, player, 1.0, -1, -1, 0x80);

   jkSetPOVModel(player, povModel);
   SetArmedMode(player, 1);
   jkSetWeaponMesh(player, weaponMesh);
	jkSetWaggle(player, waggle_vec, waggle_spd);
	waggle = 1;

   trackID = jkPlayPOVKey(player, mountAnim, 0, 20);
   SetMountWait(player, GetKeyLen(mountAnim));

   jkClearFlags(player, 0x5);
   SetCurWeapon(player, 6);
SetPulse(0);
fire3=0;
   SendMessageEx(GetInvCog(player, xhair_bin), user0, 0.0, 0, 0, 0);

   Return;

# ........................................................................................

deselected:
   if(fireChannel != -1)
   {
      StopSound(fireChannel, 0.1);
      fireChannel = -1;
   }
SetPulse(0);
fire3=0;
   PlaySoundThing(dismountSound, player, 1.0, -1, -1, 0x80);
   jkPlayPOVKey(player, dismountAnim, 0, 18);

   holsterWait = GetKeyLen(holsterAnim);
   SetMountWait(player, holsterWait);
   holsterTrack = PlayKey(player, holsterAnim, 1, 0x4);
   SetTimerEx(holsterWait, 2, 0.0, 0.0);
   if (trackID != -1)
   {
      jkStopPOVKey(player, trackID, 0);
      trackID = -1;
   }
	jkSetWaggle(player, '0 0 0', 0);
	waggle = 0;

   Return;

# ........................................................................................

newplayer:
//   // Make sure that if the player is respawning, the old mount isn't playing anymore.
//   if(trackID != -1) jkStopPOVKey(player, trackID, 0);

   if(fireChannel != -1)
   {
      StopSound(fireChannel, 0.1);
      fireChannel = -1;
   }
   	jkSetWaggle(player, '0 0 0', 0);
	waggle = 0;

   Return;
   
# ........................................................................................

killed:
   if (player == GetSenderRef())
   {  
      if(fireChannel != -1)
      {
         StopSound(fireChannel, 0.1);
         fireChannel = -1;
      }
   }
   Return;

# ........................................................................................

autoselect:
   // If the player has the weapon
   if(GetInv(player, 6) != 0.0)
   {
      // If the player has ammo
      if(GetInv(player, 12) != 0.0)
      {
         ReturnEx(800.0);
      }
      else
      {
         ReturnEx(-1.0);
      }
   }
   else
   {
      ReturnEx(-1.0);
   }

   Return;

# ........................................................................................

timer:
	if(GetSenderID() == 2)
	{
		StopKey(player, holsterTrack, 0.0);
		return;
	}
	if(GetSenderID() == 40)	// fire 3 deactivated
	{
		fire3 = 0;
		return;
	}
   Return;

user2:
	SetMountWait(player, 36000);
	if(fireChannel != -1)
	{
		StopSound(fireChannel, 0.1);
		fireChannel = -1;
	}
	if(GetInv(player, 12) < ammoCost3)
	{
		if(GetAutoSwitch() & 1)
			SelectWeapon(player, AutoSelectWeapon(player, 1));
		PlaySoundThing(outSound, player, 1.0, -1, -1, 0x180);
		Return;
	}
	if(fireChannel != -1)
	{
		StopSound( fireChannel, 0.1);
		fireChannel = -1;
	}
	powerBoost = GetInv(player, 63);
	SetPulse(fireWait3/powerBoost);
	SetBinWait(player, 130, fireWait3/powerBoost);
	KillTimerEx(40);
	SendMessageEx(GetInvCog(player, xhair_bin), user0, 0.5, 0, 0, 0);
	fire3 = 1;	// let the FIRE message know we are firing third fire now
	goto pulse;
	return;

user3:
	SetPulse(0);
	#fire3 = 0;
	SetTimerEx(fireWait3/powerBoost, 40, 0, 0);
	SetMountWait(player, 0);
	powerBoost = GetInv(player, 63);
	SetFireWait(player, fireWait3/powerBoost);
	ChangeFireRate(player, fireWait/powerBoost);
	SendMessageEx(GetInvCog(player, xhair_bin), user0, 0.0, 0, 0, 0);
	return;
	
user4:
	waggle_vec = VectorSet(GetParam(0), GetParam(1), GetParam(2));
	waggle_spd = GetParam(3);
	if(waggle) jkSetWaggle(player, waggle_vec, waggle_spd);
	Return;

end


